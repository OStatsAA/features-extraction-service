# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import src.service.features_extractor_service_pb2 as features__extractor__service__pb2


class FeaturesExtractorServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetFeatures = channel.unary_unary(
                '/FeaturesExtractorService/GetFeatures',
                request_serializer=features__extractor__service__pb2.GetFeaturesRequest.SerializeToString,
                response_deserializer=features__extractor__service__pb2.DataFeaturesSet.FromString,
                )
        self.ExtractFeatures = channel.unary_unary(
                '/FeaturesExtractorService/ExtractFeatures',
                request_serializer=features__extractor__service__pb2.ExtractFeaturesRequest.SerializeToString,
                response_deserializer=features__extractor__service__pb2.DataFeaturesSet.FromString,
                )


class FeaturesExtractorServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetFeatures(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExtractFeatures(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FeaturesExtractorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetFeatures': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeatures,
                    request_deserializer=features__extractor__service__pb2.GetFeaturesRequest.FromString,
                    response_serializer=features__extractor__service__pb2.DataFeaturesSet.SerializeToString,
            ),
            'ExtractFeatures': grpc.unary_unary_rpc_method_handler(
                    servicer.ExtractFeatures,
                    request_deserializer=features__extractor__service__pb2.ExtractFeaturesRequest.FromString,
                    response_serializer=features__extractor__service__pb2.DataFeaturesSet.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'FeaturesExtractorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FeaturesExtractorService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetFeatures(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FeaturesExtractorService/GetFeatures',
            features__extractor__service__pb2.GetFeaturesRequest.SerializeToString,
            features__extractor__service__pb2.DataFeaturesSet.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExtractFeatures(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FeaturesExtractorService/ExtractFeatures',
            features__extractor__service__pb2.ExtractFeaturesRequest.SerializeToString,
            features__extractor__service__pb2.DataFeaturesSet.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
